<?xml version="1.0"?>

<project name="scrum" default="package" basedir=".">

    <target name="update">
        <exec executable="svn">
            <arg value="update" />
        </exec>
        <exec executable="svn" dir="../ilarkesto">
            <arg value="update" />
        </exec>
    </target>

    <target name="init">
        <tstamp>
            <format property="build.tstamp" pattern="yyyy-MM-dd HH:mm" locale="de,DE" />
        </tstamp>
    </target>

    <target name="clean">
        <delete dir="build" />
    </target>

    <target name="compile" depends="clean, init">

    	<mkdir dir="build/webapp/WEB-INF/classes" />
        <copy todir="build/webapp/WEB-INF/classes">
            <fileset dir="src/main/java" />
            <fileset dir="src/generated/java" />
            <fileset dir="../ilarkesto/src/main/java" />
        </copy>
        <javac srcdir="build/webapp/WEB-INF/classes" destdir="build/webapp/WEB-INF/classes" encoding="UTF-8" nowarn="true" debug="true" debuglevel="lines,vars,source">
            <classpath> <fileset dir="../ilarkesto/lib" /> </classpath>
        </javac>

        <mkdir dir="build/test-classes" />
        <javac srcdir="src/test/java" destdir="build/test-classes" encoding="UTF-8" nowarn="true" debug="true" debuglevel="lines,vars,source">
            <classpath>
                <path location="build/webapp/WEB-INF/classes" />
                <fileset dir="../ilarkesto/lib" />
            </classpath>
        </javac>

        <java classname="com.google.gwt.dev.Compiler" failonerror="true" fork="true">
            <arg value="-war" />
            <arg value="build/webapp" />
            <arg value="scrum.ScrumGwtApplication" />
            <classpath location="src/main/java" />
            <classpath location="src/generated/java" />
            <classpath location="../ilarkesto/src/main/java" />
            <classpath location="../ilarkesto/lib/gwtupload-0.6.1.jar" />
            <classpath location="../ilarkesto/lib/gwt-dnd.jar" />
            <classpath location="../ilarkesto/lib/gwt-user.jar" />
            <classpath location="../ilarkesto/lib/gwt-dev.jar" />
        </java>

        <replace file="build/webapp/WEB-INF/classes/scrum/server/build.properties" token="@build-date@" value="${build.tstamp}" />

    </target>

    <target name="test" depends="clean, compile">
        <delete dir="runtimedata" />
        <taskdef name="testng" classpath="../ilarkesto/lib/testng-5.8.jar" classname="org.testng.TestNGAntTask" />
        <testng outputDir="build/test-reports" haltonfailure="true">
            <classfileset dir="build/test-classes" includes="**/*.class" />
            <classpath>
                <path location="build/webapp/WEB-INF/classes" />
                <path location="build/test-classes" />
                <fileset dir="../ilarkesto/lib" />
            </classpath>
        </testng>
    </target>

    <target name="webapp" depends="clean, compile, test">
        <copy todir="build/webapp" verbose="true">
            <fileset dir="src/main/webapp" />
            <fileset file="README" />
            <fileset dir="." includes="license.*" />
        </copy>
        <copy todir="build/webapp/WEB-INF/lib" verbose="true">
            <fileset dir="../ilarkesto/lib">
                <exclude name="**/src/" />
                <exclude name="**/javadoc/" />
                <exclude name="**/gwt-dev.jar" />
                <exclude name="**/servlet-api-*.jar" />
                <exclude name="**/google-collect-*.jar" />
                <exclude name="**/commons-io-*.jar" />
                <exclude name="**/commons-logging-*.jar" />
                <exclude name="**/junit-*.jar" />
                <exclude name="**/testng-*.jar" />
                <exclude name="**/httpunit-*.jar" />
                <exclude name="**/tidy*.jar" />
                <exclude name="**/oacurl-*.jar" />
                <exclude name="**/bsh-*.jar" />
                <exclude name="**/gdata-*.jar" />
                <exclude name="**/jaudiotagger-*.jar" />
                <exclude name="**/jcip-annotations.jar" />
            </fileset>
        </copy>
    </target>

    <target name="package">
        <replace file="build/webapp/WEB-INF/classes/scrum/server/build.properties" token="@release-label@" value="${release.label}" />
        <war destfile="build/kunagi.war" basedir="build/webapp" />
        <mkdir dir="build/package" />
        <copy file="build/kunagi.war" tofile="package/kunagi.war" />
        <copy todir="build/webapp" verbose="true">
            <fileset dir="src/main/webapp" />
            <fileset file="README" />
            <fileset dir="." includes="license.*" />
        </copy>
        <zip destfile="build/kunagi.zip" basedir="build/package" />
    </target>

    <target name="sourceforge">
        <exec executable="git" dir="sourceforge-svn" failonerror="true">
            <arg line="svn rebase" />
        </exec>
        <exec executable="git" dir="sourceforge-svn" failonerror="true">
            <arg line="svn dcommit" />
        </exec>
    </target>
	
    <target name="continousIntegrationBuild" depends="webapp">
        <copy todir="/var/www/kunagi.org">
            <fileset dir="src/projectHomepage/html" />
        </copy>
        <mkdir dir="/var/www/kunagi.org/velocity" />
        <copy todir="/var/www/kunagi.org/velocity">
            <fileset dir="src/projectHomepage/velocity" />
        </copy>

        <war destfile="build/kunagi.war" basedir="build/webapp" />
        <copy tofile="/home/scrum-latest/tomcat/webapps/scrum-latest.war" file="build/kunagi.war" />
    </target>

    <target name="continousIntegrationRelease" depends="package">
        <exec executable="scp" failonerror="true">
            <arg line="build/kunagi.zip koczewski,kunagi@frs.sourceforge.net:/home/frs/project/k/ku/kunagi/${release.label}/kunagi-${release.label}.zip" />
        </exec>
        <exec executable="scp" failonerror="true">
            <arg line="build/kunagi.war koczewski,kunagi@frs.sourceforge.net:/home/frs/project/k/ku/kunagi/${release.label}/kunagi.war" />
        </exec>

                <mkdir dir="/var/www/kunagi.org/releases/${release.label}" />
        <copy file="build/kunagi.war" tofile="/var/www/kunagi.org/releases/${release.label}/kunagi.war" />
        <copy file="build/kunagi.zip" tofile="/var/www/kunagi.org/releases/${release.label}/kunagi-${release.label}.zip" />

        <copy file="build/kunagi.war" tofile="/home/scrum/tomcat/webapps/scrum.war" />
        <copy file="build/kunagi.war" tofile="/home/kunagi-demo/tomcat/webapps/kunagi-demo.war" />
    </target>

</project>

